import Pagination from "@/components/pagination";
import usePosts from "@/hooks/usePosts";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useRouter } from "next/router";
import { useState } from "react";

interface IAwards {
  wins: Number;
  nominations: Number;
  text: String;
}
interface IMovie {
  _id: string;
  plot: String;
  genres: [String];
  runtime: Number;
  cast: [String];
  num_mflix_comments: Number;
  poster: string;
  title: String;
  fullplot: String;
  countries: [String];
  released: Date;
  directors: [String];
  writers: [String];
  awards: IAwards;
  lastupdated: String;
  year: Number;
  imdb: {
    rating: Number;
    votes: Number;
    id: Number;
  };
  type: String;
  tomatoes: {
    viewer: {
      rating: Number;
      numReviews: Number;
    };
    lastUpdated: Date;
  };
}
interface IMovies {
  movies: IMovie[];
  pagination: any;
}

export default function Home({ movies, pagination }: IMovies) {
  const router = useRouter();
  const pages = [1, 2, 3, 4, 5, 6];
  const [cur, setCur] = useState<number>(1);

  // const response = usePosts("1");
  console.log("PAGE", pagination);
  // console.log("RESP", response);

  const handlePagination = (action: string) => {
    if (action === "next") {
      router.replace(`?limit=4&page=${pagination.page + 1}`);
    } else {
      router.replace(`?limit=4&page=${pagination.page - 1}`);
    }
  };

  return (
    <>
      <Head>
        <title>Home Page</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="bg-blue-950 min-h-screen">
        <div className="container mx-auto">
          <h1 className="font-bold text-gray-500 text-center text-3xl">Movies List</h1>
          <div className="bg-blue-800 grid grid-cols-4 gap-4 p-4 rounded-lg">
            {movies.length > 0 &&
              movies.map((movie: IMovie) => (
                <div className="group" key={movie._id}>
                  <div className="aspect-[9/12] relative group bg-black">
                    <Image
                      src={movie.poster || ""}
                      width={100}
                      height={100}
                      alt="moviePoster"
                      className="w-full h-full object-cover rounded"
                    />
                    <div className="absolute inset-0 group-hover:bg-black/30 transition-all" />
                  </div>
                  <Link
                    className="text-black"
                    href={`movies/${movie._id}`}
                  >
                    {movie.title}
                  </Link>
                  <div>
                    <p>{movie.imdb.rating}</p>
                  </div>
                </div>
              ))}
          </div>
          <Pagination
            pages={pages}
            cur={pagination.page}
            nextPage={() => {
              handlePagination("next");
            }}
            prevPage={() => {
              handlePagination("prev");
            }}
          />
        </div>
      </div>
    </>
  );
}

export async function getServerSideProps(ctx: any) {
  const { page, limit } = ctx.query;
  const res = await fetch(
    `http://localhost:8000/movies?limit=${limit || 4}&page=${page || 1}`
  );
  const data = await res.json();

  return {
    props: { movies: data.movies, pagination: data.pagination },
  };
}
